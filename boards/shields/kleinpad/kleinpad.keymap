#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10

#include <dt-bindings/zmk/pointing.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        encoder_wheel: encoder_wheel {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <100>;
        };

        app_switch: app_switch {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            timeout-ms = <2000>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
        };

        lth: layer_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&to>;
            display-name = "Layer-Tap";
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            display-name = "base";
            bindings = <
                &mkp LCLK    &mkp MCLK   &mkp RCLK   &app_switch
                &kp LC(Z)    &kp LC(C)   &kp LC(V)   &lth 2 1
            >;
            sensor-bindings = <&encoder_wheel>;
        };

        fusion_layer { // Layer 0
            display-name = "Fusion";
            bindings = <
                &kp L      &kp R       &kp C      &kp D
                &kp LSHFT  &kp LCTRL   &kp LALT   &lth 2 0
            >;
            sensor-bindings = <&encoder_wheel>;
        };

        system_layer { // Layer 0
            display-name = "System";
            bindings = <
                &bt BT_NXT    &bt BT_PRV   &bt BT_DISC       &none
                &sys_reset    &soft_off    &ext_power EP_ON  &to 0
            >;
            sensor-bindings = <&encoder_wheel>;
        };
    };
};